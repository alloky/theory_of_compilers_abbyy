CLASS class
ID LinkedList
LPARBR {
PUBLIC public
STATIC static
VOID void
ID main
LPAREN (
ID String
LPARSQ [
RPARSQ ]
ID a
RPAREN )
LPARBR {
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
NEW new
ID LL
LPAREN (
RPAREN )
DOT .
ID Start
LPAREN (
RPAREN )
RPAREN )
SEMICOL ;
RPARBR }
RPARBR }
CLASS class
ID Element
LPARBR {
INT int
ID Age
SEMICOL ;
INT int
ID Salary
SEMICOL ;
ID boolean
ID Married
SEMICOL ;
PUBLIC public
ID boolean
ID Init
LPAREN (
INT int
ID v_Age
COMMA ,
INT int
ID v_Salary
COMMA ,
ID boolean
ID v_Married
RPAREN )
LPARBR {
ID Age
EQ =
ID v_Age
SEMICOL ;
ID Salary
EQ =
ID v_Salary
SEMICOL ;
ID Married
EQ =
ID v_Married
SEMICOL ;
RETURN return
ID true
SEMICOL ;
RPARBR }
PUBLIC public
INT int
ID GetAge
LPAREN (
RPAREN )
LPARBR {
RETURN return
ID Age
SEMICOL ;
RPARBR }
PUBLIC public
INT int
ID GetSalary
LPAREN (
RPAREN )
LPARBR {
RETURN return
ID Salary
SEMICOL ;
RPARBR }
PUBLIC public
ID boolean
ID GetMarried
LPAREN (
RPAREN )
LPARBR {
RETURN return
ID Married
SEMICOL ;
RPARBR }
PUBLIC public
ID boolean
ID Equal
LPAREN (
ID Element
ID other
RPAREN )
LPARBR {
ID boolean
ID ret_val
SEMICOL ;
INT int
ID aux01
SEMICOL ;
INT int
ID aux02
SEMICOL ;
INT int
ID nt
SEMICOL ;
ID ret_val
EQ =
ID true
SEMICOL ;
ID aux01
EQ =
ID other
DOT .
ID GetAge
LPAREN (
RPAREN )
SEMICOL ;
IF if
LPAREN (
NOT !
THIS this
DOT .
ID Compare
LPAREN (
ID aux01
COMMA ,
ID Age
RPAREN )
RPAREN )
ID ret_val
EQ =
ID false
SEMICOL ;
ELSE else
LPARBR {
ID aux02
EQ =
ID other
DOT .
ID GetSalary
LPAREN (
RPAREN )
SEMICOL ;
IF if
LPAREN (
NOT !
THIS this
DOT .
ID Compare
LPAREN (
ID aux02
COMMA ,
ID Salary
RPAREN )
RPAREN )
ID ret_val
EQ =
ID false
SEMICOL ;
ELSE else
IF if
LPAREN (
ID Married
RPAREN )
IF if
LPAREN (
NOT !
ID other
DOT .
ID GetMarried
LPAREN (
RPAREN )
RPAREN )
ID ret_val
EQ =
ID false
SEMICOL ;
ELSE else
ID nt
EQ =
NUMBER 0
SEMICOL ;
ELSE else
IF if
LPAREN (
ID other
DOT .
ID GetMarried
LPAREN (
RPAREN )
RPAREN )
ID ret_val
EQ =
ID false
SEMICOL ;
ELSE else
ID nt
EQ =
NUMBER 0
SEMICOL ;
RPARBR }
RETURN return
ID ret_val
SEMICOL ;
RPARBR }
PUBLIC public
ID boolean
ID Compare
LPAREN (
INT int
ID num1
COMMA ,
INT int
ID num2
RPAREN )
LPARBR {
ID boolean
ID retval
SEMICOL ;
INT int
ID aux02
SEMICOL ;
ID retval
EQ =
ID false
SEMICOL ;
ID aux02
EQ =
ID num2
PLUS +
NUMBER 1
SEMICOL ;
IF if
LPAREN (
ID num1
LESS <
ID num2
RPAREN )
ID retval
EQ =
ID false
SEMICOL ;
ELSE else
IF if
LPAREN (
NOT !
LPAREN (
ID num1
LESS <
ID aux02
RPAREN )
RPAREN )
ID retval
EQ =
ID false
SEMICOL ;
ELSE else
ID retval
EQ =
ID true
SEMICOL ;
RETURN return
ID retval
SEMICOL ;
RPARBR }
RPARBR }
CLASS class
ID List
LPARBR {
ID Element
ID elem
SEMICOL ;
ID List
ID next
SEMICOL ;
ID boolean
ID end
SEMICOL ;
PUBLIC public
ID boolean
ID Init
LPAREN (
RPAREN )
LPARBR {
ID end
EQ =
ID true
SEMICOL ;
RETURN return
ID true
SEMICOL ;
RPARBR }
PUBLIC public
ID boolean
ID InitNew
LPAREN (
ID Element
ID v_elem
COMMA ,
ID List
ID v_next
COMMA ,
ID boolean
ID v_end
RPAREN )
LPARBR {
ID end
EQ =
ID v_end
SEMICOL ;
ID elem
EQ =
ID v_elem
SEMICOL ;
ID next
EQ =
ID v_next
SEMICOL ;
RETURN return
ID true
SEMICOL ;
RPARBR }
PUBLIC public
ID List
ID Insert
LPAREN (
ID Element
ID new_elem
RPAREN )
LPARBR {
ID boolean
ID ret_val
SEMICOL ;
ID List
ID aux03
SEMICOL ;
ID List
ID aux02
SEMICOL ;
ID aux03
EQ =
THIS this
SEMICOL ;
ID aux02
EQ =
NEW new
ID List
LPAREN (
RPAREN )
SEMICOL ;
ID ret_val
EQ =
ID aux02
DOT .
ID InitNew
LPAREN (
ID new_elem
COMMA ,
ID aux03
COMMA ,
ID false
RPAREN )
SEMICOL ;
RETURN return
ID aux02
SEMICOL ;
RPARBR }
PUBLIC public
ID boolean
ID SetNext
LPAREN (
ID List
ID v_next
RPAREN )
LPARBR {
ID next
EQ =
ID v_next
SEMICOL ;
RETURN return
ID true
SEMICOL ;
RPARBR }
PUBLIC public
ID List
ID Delete
LPAREN (
ID Element
ID e
RPAREN )
LPARBR {
ID List
ID my_head
SEMICOL ;
ID boolean
ID ret_val
SEMICOL ;
ID boolean
ID aux05
SEMICOL ;
ID List
ID aux01
SEMICOL ;
ID List
ID prev
SEMICOL ;
ID boolean
ID var_end
SEMICOL ;
ID Element
ID var_elem
SEMICOL ;
INT int
ID aux04
SEMICOL ;
INT int
ID nt
SEMICOL ;
ID my_head
EQ =
THIS this
SEMICOL ;
ID ret_val
EQ =
ID false
SEMICOL ;
ID aux04
EQ =
NUMBER 0
MINUS -
NUMBER 1
SEMICOL ;
ID aux01
EQ =
THIS this
SEMICOL ;
ID prev
EQ =
THIS this
SEMICOL ;
ID var_end
EQ =
ID end
SEMICOL ;
ID var_elem
EQ =
ID elem
SEMICOL ;
WHILE while
LPAREN (
LPAREN (
NOT !
ID var_end
RPAREN )
AND &&
LPAREN (
NOT !
ID ret_val
RPAREN )
RPAREN )
LPARBR {
IF if
LPAREN (
ID e
DOT .
ID Equal
LPAREN (
ID var_elem
RPAREN )
RPAREN )
LPARBR {
ID ret_val
EQ =
ID true
SEMICOL ;
IF if
LPAREN (
ID aux04
LESS <
NUMBER 0
RPAREN )
LPARBR {
ID my_head
EQ =
ID aux01
DOT .
ID GetNext
LPAREN (
RPAREN )
SEMICOL ;
RPARBR }
ELSE else
LPARBR {
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
NUMBER 0
MINUS -
NUMBER 555
RPAREN )
SEMICOL ;
ID aux05
EQ =
ID prev
DOT .
ID SetNext
LPAREN (
ID aux01
DOT .
ID GetNext
LPAREN (
RPAREN )
RPAREN )
SEMICOL ;
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
NUMBER 0
MINUS -
NUMBER 555
RPAREN )
SEMICOL ;
RPARBR }
RPARBR }
ELSE else
ID nt
EQ =
NUMBER 0
SEMICOL ;
IF if
LPAREN (
NOT !
ID ret_val
RPAREN )
LPARBR {
ID prev
EQ =
ID aux01
SEMICOL ;
ID aux01
EQ =
ID aux01
DOT .
ID GetNext
LPAREN (
RPAREN )
SEMICOL ;
ID var_end
EQ =
ID aux01
DOT .
ID GetEnd
LPAREN (
RPAREN )
SEMICOL ;
ID var_elem
EQ =
ID aux01
DOT .
ID GetElem
LPAREN (
RPAREN )
SEMICOL ;
ID aux04
EQ =
NUMBER 1
SEMICOL ;
RPARBR }
ELSE else
ID nt
EQ =
NUMBER 0
SEMICOL ;
RPARBR }
RETURN return
ID my_head
SEMICOL ;
RPARBR }
PUBLIC public
INT int
ID Search
LPAREN (
ID Element
ID e
RPAREN )
LPARBR {
INT int
ID int_ret_val
SEMICOL ;
ID List
ID aux01
SEMICOL ;
ID Element
ID var_elem
SEMICOL ;
ID boolean
ID var_end
SEMICOL ;
INT int
ID nt
SEMICOL ;
ID int_ret_val
EQ =
NUMBER 0
SEMICOL ;
ID aux01
EQ =
THIS this
SEMICOL ;
ID var_end
EQ =
ID end
SEMICOL ;
ID var_elem
EQ =
ID elem
SEMICOL ;
WHILE while
LPAREN (
NOT !
ID var_end
RPAREN )
LPARBR {
IF if
LPAREN (
ID e
DOT .
ID Equal
LPAREN (
ID var_elem
RPAREN )
RPAREN )
LPARBR {
ID int_ret_val
EQ =
NUMBER 1
SEMICOL ;
RPARBR }
ELSE else
ID nt
EQ =
NUMBER 0
SEMICOL ;
ID aux01
EQ =
ID aux01
DOT .
ID GetNext
LPAREN (
RPAREN )
SEMICOL ;
ID var_end
EQ =
ID aux01
DOT .
ID GetEnd
LPAREN (
RPAREN )
SEMICOL ;
ID var_elem
EQ =
ID aux01
DOT .
ID GetElem
LPAREN (
RPAREN )
SEMICOL ;
RPARBR }
RETURN return
ID int_ret_val
SEMICOL ;
RPARBR }
PUBLIC public
ID boolean
ID GetEnd
LPAREN (
RPAREN )
LPARBR {
RETURN return
ID end
SEMICOL ;
RPARBR }
PUBLIC public
ID Element
ID GetElem
LPAREN (
RPAREN )
LPARBR {
RETURN return
ID elem
SEMICOL ;
RPARBR }
PUBLIC public
ID List
ID GetNext
LPAREN (
RPAREN )
LPARBR {
RETURN return
ID next
SEMICOL ;
RPARBR }
PUBLIC public
ID boolean
ID Print
LPAREN (
RPAREN )
LPARBR {
ID List
ID aux01
SEMICOL ;
ID boolean
ID var_end
SEMICOL ;
ID Element
ID var_elem
SEMICOL ;
ID aux01
EQ =
THIS this
SEMICOL ;
ID var_end
EQ =
ID end
SEMICOL ;
ID var_elem
EQ =
ID elem
SEMICOL ;
WHILE while
LPAREN (
NOT !
ID var_end
RPAREN )
LPARBR {
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
ID var_elem
DOT .
ID GetAge
LPAREN (
RPAREN )
RPAREN )
SEMICOL ;
ID aux01
EQ =
ID aux01
DOT .
ID GetNext
LPAREN (
RPAREN )
SEMICOL ;
ID var_end
EQ =
ID aux01
DOT .
ID GetEnd
LPAREN (
RPAREN )
SEMICOL ;
ID var_elem
EQ =
ID aux01
DOT .
ID GetElem
LPAREN (
RPAREN )
SEMICOL ;
RPARBR }
RETURN return
ID true
SEMICOL ;
RPARBR }
RPARBR }
CLASS class
ID LL
LPARBR {
PUBLIC public
INT int
ID Start
LPAREN (
RPAREN )
LPARBR {
ID List
ID head
SEMICOL ;
ID List
ID last_elem
SEMICOL ;
ID boolean
ID aux01
SEMICOL ;
ID Element
ID el01
SEMICOL ;
ID Element
ID el02
SEMICOL ;
ID Element
ID el03
SEMICOL ;
ID last_elem
EQ =
NEW new
ID List
LPAREN (
RPAREN )
SEMICOL ;
ID aux01
EQ =
ID last_elem
DOT .
ID Init
LPAREN (
RPAREN )
SEMICOL ;
ID head
EQ =
ID last_elem
SEMICOL ;
ID aux01
EQ =
ID head
DOT .
ID Init
LPAREN (
RPAREN )
SEMICOL ;
ID aux01
EQ =
ID head
DOT .
ID Print
LPAREN (
RPAREN )
SEMICOL ;
ID el01
EQ =
NEW new
ID Element
LPAREN (
RPAREN )
SEMICOL ;
ID aux01
EQ =
ID el01
DOT .
ID Init
LPAREN (
NUMBER 25
COMMA ,
NUMBER 37000
COMMA ,
ID false
RPAREN )
SEMICOL ;
ID head
EQ =
ID head
DOT .
ID Insert
LPAREN (
ID el01
RPAREN )
SEMICOL ;
ID aux01
EQ =
ID head
DOT .
ID Print
LPAREN (
RPAREN )
SEMICOL ;
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
NUMBER 10000000
RPAREN )
SEMICOL ;
ID el01
EQ =
NEW new
ID Element
LPAREN (
RPAREN )
SEMICOL ;
ID aux01
EQ =
ID el01
DOT .
ID Init
LPAREN (
NUMBER 39
COMMA ,
NUMBER 42000
COMMA ,
ID true
RPAREN )
SEMICOL ;
ID el02
EQ =
ID el01
SEMICOL ;
ID head
EQ =
ID head
DOT .
ID Insert
LPAREN (
ID el01
RPAREN )
SEMICOL ;
ID aux01
EQ =
ID head
DOT .
ID Print
LPAREN (
RPAREN )
SEMICOL ;
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
NUMBER 10000000
RPAREN )
SEMICOL ;
ID el01
EQ =
NEW new
ID Element
LPAREN (
RPAREN )
SEMICOL ;
ID aux01
EQ =
ID el01
DOT .
ID Init
LPAREN (
NUMBER 22
COMMA ,
NUMBER 34000
COMMA ,
ID false
RPAREN )
SEMICOL ;
ID head
EQ =
ID head
DOT .
ID Insert
LPAREN (
ID el01
RPAREN )
SEMICOL ;
ID aux01
EQ =
ID head
DOT .
ID Print
LPAREN (
RPAREN )
SEMICOL ;
ID el03
EQ =
NEW new
ID Element
LPAREN (
RPAREN )
SEMICOL ;
ID aux01
EQ =
ID el03
DOT .
ID Init
LPAREN (
NUMBER 27
COMMA ,
NUMBER 34000
COMMA ,
ID false
RPAREN )
SEMICOL ;
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
ID head
DOT .
ID Search
LPAREN (
ID el02
RPAREN )
RPAREN )
SEMICOL ;
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
ID head
DOT .
ID Search
LPAREN (
ID el03
RPAREN )
RPAREN )
SEMICOL ;
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
NUMBER 10000000
RPAREN )
SEMICOL ;
ID el01
EQ =
NEW new
ID Element
LPAREN (
RPAREN )
SEMICOL ;
ID aux01
EQ =
ID el01
DOT .
ID Init
LPAREN (
NUMBER 28
COMMA ,
NUMBER 35000
COMMA ,
ID false
RPAREN )
SEMICOL ;
ID head
EQ =
ID head
DOT .
ID Insert
LPAREN (
ID el01
RPAREN )
SEMICOL ;
ID aux01
EQ =
ID head
DOT .
ID Print
LPAREN (
RPAREN )
SEMICOL ;
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
NUMBER 2220000
RPAREN )
SEMICOL ;
ID head
EQ =
ID head
DOT .
ID Delete
LPAREN (
ID el02
RPAREN )
SEMICOL ;
ID aux01
EQ =
ID head
DOT .
ID Print
LPAREN (
RPAREN )
SEMICOL ;
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
NUMBER 33300000
RPAREN )
SEMICOL ;
ID head
EQ =
ID head
DOT .
ID Delete
LPAREN (
ID el01
RPAREN )
SEMICOL ;
ID aux01
EQ =
ID head
DOT .
ID Print
LPAREN (
RPAREN )
SEMICOL ;
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
NUMBER 44440000
RPAREN )
SEMICOL ;
RETURN return
NUMBER 0
SEMICOL ;
RPARBR }
RPARBR }
