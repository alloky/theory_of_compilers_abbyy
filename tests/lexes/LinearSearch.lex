CLASS class
ID LinearSearch
LPARBR {
PUBLIC public
STATIC static
VOID void
ID main
LPAREN (
ID String
LPARSQ [
RPARSQ ]
ID a
RPAREN )
LPARBR {
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
NEW new
ID LS
LPAREN (
RPAREN )
DOT .
ID Start
LPAREN (
NUMBER 10
RPAREN )
RPAREN )
SEMICOL ;
RPARBR }
RPARBR }
CLASS class
ID LS
LPARBR {
INT int
LPARSQ [
RPARSQ ]
ID number
SEMICOL ;
INT int
ID size
SEMICOL ;
PUBLIC public
INT int
ID Start
LPAREN (
INT int
ID sz
RPAREN )
LPARBR {
INT int
ID aux01
SEMICOL ;
INT int
ID aux02
SEMICOL ;
ID aux01
EQ =
THIS this
DOT .
ID Init
LPAREN (
ID sz
RPAREN )
SEMICOL ;
ID aux02
EQ =
THIS this
DOT .
ID Print
LPAREN (
RPAREN )
SEMICOL ;
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
NUMBER 9999
RPAREN )
SEMICOL ;
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
THIS this
DOT .
ID Search
LPAREN (
NUMBER 8
RPAREN )
RPAREN )
SEMICOL ;
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
THIS this
DOT .
ID Search
LPAREN (
NUMBER 12
RPAREN )
RPAREN )
SEMICOL ;
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
THIS this
DOT .
ID Search
LPAREN (
NUMBER 17
RPAREN )
RPAREN )
SEMICOL ;
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
THIS this
DOT .
ID Search
LPAREN (
NUMBER 50
RPAREN )
RPAREN )
SEMICOL ;
RETURN return
NUMBER 55
SEMICOL ;
RPARBR }
PUBLIC public
INT int
ID Print
LPAREN (
RPAREN )
LPARBR {
INT int
ID j
SEMICOL ;
ID j
EQ =
NUMBER 1
SEMICOL ;
WHILE while
LPAREN (
ID j
LESS <
LPAREN (
ID size
RPAREN )
RPAREN )
LPARBR {
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
ID number
LPARSQ [
ID j
RPARSQ ]
RPAREN )
SEMICOL ;
ID j
EQ =
ID j
PLUS +
NUMBER 1
SEMICOL ;
RPARBR }
RETURN return
NUMBER 0
SEMICOL ;
RPARBR }
PUBLIC public
INT int
ID Search
LPAREN (
INT int
ID num
RPAREN )
LPARBR {
INT int
ID j
SEMICOL ;
ID boolean
ID ls01
SEMICOL ;
INT int
ID ifound
SEMICOL ;
INT int
ID aux01
SEMICOL ;
INT int
ID aux02
SEMICOL ;
INT int
ID nt
SEMICOL ;
ID j
EQ =
NUMBER 1
SEMICOL ;
ID ls01
EQ =
ID false
SEMICOL ;
ID ifound
EQ =
NUMBER 0
SEMICOL ;
WHILE while
LPAREN (
ID j
LESS <
LPAREN (
ID size
RPAREN )
RPAREN )
LPARBR {
ID aux01
EQ =
ID number
LPARSQ [
ID j
RPARSQ ]
SEMICOL ;
ID aux02
EQ =
ID num
PLUS +
NUMBER 1
SEMICOL ;
IF if
LPAREN (
ID aux01
LESS <
ID num
RPAREN )
ID nt
EQ =
NUMBER 0
SEMICOL ;
ELSE else
IF if
LPAREN (
NOT !
LPAREN (
ID aux01
LESS <
ID aux02
RPAREN )
RPAREN )
ID nt
EQ =
NUMBER 0
SEMICOL ;
ELSE else
LPARBR {
ID ls01
EQ =
ID true
SEMICOL ;
ID ifound
EQ =
NUMBER 1
SEMICOL ;
ID j
EQ =
ID size
SEMICOL ;
RPARBR }
ID j
EQ =
ID j
PLUS +
NUMBER 1
SEMICOL ;
RPARBR }
RETURN return
ID ifound
SEMICOL ;
RPARBR }
PUBLIC public
INT int
ID Init
LPAREN (
INT int
ID sz
RPAREN )
LPARBR {
INT int
ID j
SEMICOL ;
INT int
ID k
SEMICOL ;
INT int
ID aux01
SEMICOL ;
INT int
ID aux02
SEMICOL ;
ID size
EQ =
ID sz
SEMICOL ;
ID number
EQ =
NEW new
INT int
LPARSQ [
ID sz
RPARSQ ]
SEMICOL ;
ID j
EQ =
NUMBER 1
SEMICOL ;
ID k
EQ =
ID size
PLUS +
NUMBER 1
SEMICOL ;
WHILE while
LPAREN (
ID j
LESS <
LPAREN (
ID size
RPAREN )
RPAREN )
LPARBR {
ID aux01
EQ =
NUMBER 2
TIMES *
ID j
SEMICOL ;
ID aux02
EQ =
ID k
MINUS -
NUMBER 3
SEMICOL ;
ID number
LPARSQ [
ID j
RPARSQ ]
EQ =
ID aux01
PLUS +
ID aux02
SEMICOL ;
ID j
EQ =
ID j
PLUS +
NUMBER 1
SEMICOL ;
ID k
EQ =
ID k
MINUS -
NUMBER 1
SEMICOL ;
RPARBR }
RETURN return
NUMBER 0
SEMICOL ;
RPARBR }
RPARBR }
