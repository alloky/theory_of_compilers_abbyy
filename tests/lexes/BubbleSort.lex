CLASS class
ID BubbleSort
LPARBR {
PUBLIC public
STATIC static
VOID void
ID main
LPAREN (
ID String
LPARSQ [
RPARSQ ]
ID a
RPAREN )
LPARBR {
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
NEW new
ID BBS
LPAREN (
RPAREN )
DOT .
ID Start
LPAREN (
NUMBER 10
RPAREN )
RPAREN )
SEMICOL ;
RPARBR }
RPARBR }
CLASS class
ID BBS
LPARBR {
INT int
LPARSQ [
RPARSQ ]
ID number
SEMICOL ;
INT int
ID size
SEMICOL ;
PUBLIC public
INT int
ID Start
LPAREN (
INT int
ID sz
RPAREN )
LPARBR {
INT int
ID aux01
SEMICOL ;
ID aux01
EQ =
THIS this
DOT .
ID Init
LPAREN (
ID sz
RPAREN )
SEMICOL ;
ID aux01
EQ =
THIS this
DOT .
ID Print
LPAREN (
RPAREN )
SEMICOL ;
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
NUMBER 99999
RPAREN )
SEMICOL ;
ID aux01
EQ =
THIS this
DOT .
ID Sort
LPAREN (
RPAREN )
SEMICOL ;
ID aux01
EQ =
THIS this
DOT .
ID Print
LPAREN (
RPAREN )
SEMICOL ;
RETURN return
NUMBER 0
SEMICOL ;
RPARBR }
PUBLIC public
INT int
ID Sort
LPAREN (
RPAREN )
LPARBR {
INT int
ID nt
SEMICOL ;
INT int
ID i
SEMICOL ;
INT int
ID aux02
SEMICOL ;
INT int
ID aux04
SEMICOL ;
INT int
ID aux05
SEMICOL ;
INT int
ID aux06
SEMICOL ;
INT int
ID aux07
SEMICOL ;
INT int
ID j
SEMICOL ;
INT int
ID t
SEMICOL ;
ID i
EQ =
ID size
MINUS -
NUMBER 1
SEMICOL ;
ID aux02
EQ =
NUMBER 0
MINUS -
NUMBER 1
SEMICOL ;
WHILE while
LPAREN (
ID aux02
LESS <
ID i
RPAREN )
LPARBR {
ID j
EQ =
NUMBER 1
SEMICOL ;
WHILE while
LPAREN (
ID j
LESS <
LPAREN (
ID i
PLUS +
NUMBER 1
RPAREN )
RPAREN )
LPARBR {
ID aux07
EQ =
ID j
MINUS -
NUMBER 1
SEMICOL ;
ID aux04
EQ =
ID number
LPARSQ [
ID aux07
RPARSQ ]
SEMICOL ;
ID aux05
EQ =
ID number
LPARSQ [
ID j
RPARSQ ]
SEMICOL ;
IF if
LPAREN (
ID aux05
LESS <
ID aux04
RPAREN )
LPARBR {
ID aux06
EQ =
ID j
MINUS -
NUMBER 1
SEMICOL ;
ID t
EQ =
ID number
LPARSQ [
ID aux06
RPARSQ ]
SEMICOL ;
ID number
LPARSQ [
ID aux06
RPARSQ ]
EQ =
ID number
LPARSQ [
ID j
RPARSQ ]
SEMICOL ;
ID number
LPARSQ [
ID j
RPARSQ ]
EQ =
ID t
SEMICOL ;
RPARBR }
ELSE else
ID nt
EQ =
NUMBER 0
SEMICOL ;
ID j
EQ =
ID j
PLUS +
NUMBER 1
SEMICOL ;
RPARBR }
ID i
EQ =
ID i
MINUS -
NUMBER 1
SEMICOL ;
RPARBR }
RETURN return
NUMBER 0
SEMICOL ;
RPARBR }
PUBLIC public
INT int
ID Print
LPAREN (
RPAREN )
LPARBR {
INT int
ID j
SEMICOL ;
ID j
EQ =
NUMBER 0
SEMICOL ;
WHILE while
LPAREN (
ID j
LESS <
LPAREN (
ID size
RPAREN )
RPAREN )
LPARBR {
ID System
DOT .
ID out
DOT .
ID println
LPAREN (
ID number
LPARSQ [
ID j
RPARSQ ]
RPAREN )
SEMICOL ;
ID j
EQ =
ID j
PLUS +
NUMBER 1
SEMICOL ;
RPARBR }
RETURN return
NUMBER 0
SEMICOL ;
RPARBR }
PUBLIC public
INT int
ID Init
LPAREN (
INT int
ID sz
RPAREN )
LPARBR {
ID size
EQ =
ID sz
SEMICOL ;
ID number
EQ =
NEW new
INT int
LPARSQ [
ID sz
RPARSQ ]
SEMICOL ;
ID number
LPARSQ [
NUMBER 0
RPARSQ ]
EQ =
NUMBER 20
SEMICOL ;
ID number
LPARSQ [
NUMBER 1
RPARSQ ]
EQ =
NUMBER 7
SEMICOL ;
ID number
LPARSQ [
NUMBER 2
RPARSQ ]
EQ =
NUMBER 12
SEMICOL ;
ID number
LPARSQ [
NUMBER 3
RPARSQ ]
EQ =
NUMBER 18
SEMICOL ;
ID number
LPARSQ [
NUMBER 4
RPARSQ ]
EQ =
NUMBER 2
SEMICOL ;
ID number
LPARSQ [
NUMBER 5
RPARSQ ]
EQ =
NUMBER 11
SEMICOL ;
ID number
LPARSQ [
NUMBER 6
RPARSQ ]
EQ =
NUMBER 6
SEMICOL ;
ID number
LPARSQ [
NUMBER 7
RPARSQ ]
EQ =
NUMBER 9
SEMICOL ;
ID number
LPARSQ [
NUMBER 8
RPARSQ ]
EQ =
NUMBER 19
SEMICOL ;
ID number
LPARSQ [
NUMBER 9
RPARSQ ]
EQ =
NUMBER 5
SEMICOL ;
RETURN return
NUMBER 0
SEMICOL ;
RPARBR }
RPARBR }
